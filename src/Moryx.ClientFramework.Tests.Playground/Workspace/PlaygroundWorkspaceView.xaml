<!--
 Copyright (c) 2020, Phoenix Contact GmbH & Co. KG
 Licensed under the Apache License, Version 2.0
-->
<UserControl x:Class="Moryx.ClientFramework.Tests.Playground.PlaygroundWorkspaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:playground="clr-namespace:Moryx.ClientFramework.Tests.Playground"
             xmlns:properties="clr-namespace:Moryx.ClientFramework.Tests.Playground.Properties"
             mc:Ignorable="d" d:DesignHeight="379" d:DesignWidth="515"
             d:DataContext="{d:DesignInstance playground:PlaygroundWorkspaceViewModel}">

    <StackPanel>
        <InfoBox x:Name="InfoBox" Text="{x:Static properties:Strings.PlaygroundWorkspaceView_HelloWorld}" BaseBrush="Black" Height="100" Width="300" />
        <UniformGrid Rows="2" Margin="30" HorizontalAlignment="Center" VerticalAlignment="Center">
            <UniformGrid.Resources>
                <Style TargetType="EddieButton">
                    <Setter Property="Margin" Value="10" />
                </Style>
                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Setter Property="Margin" Value="10" />
                </Style>
            </UniformGrid.Resources>
            <EddieButton Command="{Binding LongCmd}">Long Async Task</EddieButton>
            <CheckBox IsChecked="{Binding LongActivated}">Available</CheckBox>

            <EddieButton Command="{Binding LongReturnCmd}">Long Return Async Task</EddieButton>
            <EddieButton Command="{Binding ExceptionCmd}">Long Exception Async Task</EddieButton>
        </UniformGrid>
        <StackPanel HorizontalAlignment="Center">
            <TextBlock Text="{Binding ReturnValue, StringFormat='{}Return Value: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.IsExecuting, StringFormat='{}IsExecuting: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.IsCompleted, StringFormat='{}IsCompleted: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.IsFaulted, StringFormat='{}IsFaulted: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.IsNotCompleted, StringFormat='{}IsNotCompleted: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.IsSuccessfullyCompleted, StringFormat='{}IsSuccessfullyCompleted: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.Status, StringFormat='{}Status: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.Exception, StringFormat='{}Exception: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.InnerException, StringFormat='{}InnerException: {0}'}" />
            <TextBlock Text="{Binding CurrentCommand.Execution.ErrorMessage, StringFormat='{}ErrorMessage: {0}'}" />
        </StackPanel>

    </StackPanel>
</UserControl>
